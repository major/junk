Effective Distributed Monitoring and Load Balancing using Consul
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**Abstract:**

Current monitoring tools like nagios etc are good for simpleton health checks. But the onus is still on the users to write scripts or manually take actions when the alarm triggers. Current monitoring apps operate like IFTT (IF this Then That). We need our applications to self-heal in the cloud environment. At least significantly reduce the downtime while firefighting issues. In this session, we’ll provide a different perspective on not only monitoring your applications, but also automatically scaling it and effectively load balancing them. We leverage Consul’s key features such as dns interface, key-value store, distributed locks to enable an effective distributed monitoring strategy. In this talk, we'll share our experience on how to we ushered into microservices infrastructure from a monolithic application and how to leverage consul for monitoring, service discovery and load balancing applications deployed to cloud.


* **Rahul Ramakrishna** *(Rahul is a software developer @Cisco Cloud, where he primarily works on data streaming problems and building distributed and robust data pipelines. He graduated from University of Massachusetts, Amherst in Computer Science. As a part of Database and Information Management lab, he worked on package builders which is a system that tries to understand losely defined constraits and helps users navigate to intended  solutions in the search space. Prior to that he worked @ Yahoo! sports, where he worked on developing operations tools, monitoring applications and scaling cloud application platforms over large server farms.  In his free time, he keeps tinkering in Databases, Distributed Systems and Machine Learning for Bots.)*

* **Yathiraj Udupi** *(Yathiraj Udupi is a Technical Leader of Engineering in the Office of the Cloud CTO at Cisco Systems working on OpenStack, BigData,  related projects.  He is actively executing and leading in building large scale, efficient cloud and streaming big data architectures with an emphasis on operational intelligence, monitoring, smart alerting, streaming analytics, and optimized cloud resource and workload placements (scheduling). He is an active Openstacker with interests in the projects such as Nova, Monasca, Telemetry. Yathiraj Udupi received his PhD in Computer Science from North Carolina State University where his research interests included Multiagent systems, Policy-based Management, Distributed AI.  He received his Bachelors (BTech) from the Indian Institute of Technology Madras (IITM) in Computer Science.)*
