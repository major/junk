Understanding Cinder Performance in an OpenStack environment.
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**Abstract:**

We will present our findings around storage performance for QEMU/KVM.  We look at hypervisor and VM storage tuning variables.  The number of VMs per host and different methods to connect storage to an instance and their impact on storage performance. We will also look at Cinder API performance for a large number of provisioning requests and other operations.


* **Ed Balduf** *(Ed Balduf is a Cloud Solutions Architect at SolidFire/NetApp, focusing on OpenStack, Containers and Agile Infrastructure. Ed wrote the SolidFire Puppet module, contributes to Cinder and container storage drivers. Ed has been working over 20+ years in technology, consulting and sales.  Ed is highly technical but has always chosen to work in roles involving interaction with customers and partners as he excels at solving new problems and knowledge sharing. Ed was most recently Sr. Staff Storage Architect with Fusion-io/SanDisk working with Hyperscale customers on scale out storage deployments. Ed lead Fusion-io’s technical efforts around OpenStack.     Ed has extensive history and experience in Fibre Channel, Real-time processing, NAND Flash, Training development and packet routing.)*

* **David Black** *(David works as an architect in NetApp's Central Field Labs, designing and demonstrating a wide variety of proof-of-concept environments for customers.  His areas of expertise are in virtualization and automation including OpenStack, storage performance, networking and security.  He holds the CISSP certification and is a frequent speaker at NetApp's Insight annual technical conferences.)*

* **John Griffith** *(John Griffith, Principal Software Engineer at SolidFire, helped to create the Cinder project in OpenStack.  His primary responsibility at SolidFire is technical contributor to OpenStack and Open Source technologies.  He served as Technical Lead for the Block Storage Project since it's beginning through the Juno release, and also has held an elected seat on the OpenStack Technical Committee on and off over the past four years. John has over fifteen years of engineering experience in both hardware and software engineering.  He’s been an active user and contributor to open source for close to a decade, and has been focused on OpenStack since January of 2011. In addition to his technical contributions, John also spends a lot of his time talking to people who are interested in learning about OpenStack as well as gathering feedback from current users.)*
