HPC, Unikernels and OpenStack
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**Abstract:**

This session explains lessons learned integrating HPC workloads with unikernels on top of OpenStack. HPC workloads are traditionally executed in general purpose operating systems running directly on the host. Virtualized and containerised environments using these base systems are being adopted to improve flexibility and manageability of the infrastructure. To this end, the MIKELANGELO project is using a lightweight unikernel (OSv) providing bare minimum, but fully virtualized environment to these workloads. We are going to present a flexible application management that has been implemented specifically to support integration with cloud middlewares, such as OpenStack. This allows dynamic composition and execution of workloads based on user's needs. OpenFOAM CFD is being used to showcase our approach, including an integration into OpenStack dashboard. Finally, we will show how the use of a flexible telemetry system delivers in-depth insights into the infrastructure and application.


* **Gregor Berginc** *(Gregor has been self-taught software programmer since the age of 8. He has been a professional software developer, system architect and project/product manager for over 10 years providing expertise on all layers of multi-tier architectures. Over the last five years, my primary focus was on development and deployment of 3D-GIS solutions supporting emergency response centres in their efforts to provide timely and proper decisions in time-critical situations. Beginning in 2015 he took a role of a technical manager of an European project MIKELANGELO resolving few of the main pain-points large HPC centers experience when considering more flexible, Cloud-based, architectures. Besides engineering skills, he has developed great management skills leading multidisciplinary teams and interacting with external partners and clients. My greatest satisfaction is when customers are using our software and services the way they anticipated. He loves having conversations with clients discussing all aspects of the system in search for optimal solutions allowing me to translate client's pain to the language understood by my colleagues. Whenever possible, Gregor tries to employ agile software development methodology based on modern code sharing, review and testing technologies guaranteeing high quality of team's work.)*

* **Daniel Vladušič** *(Daniel Vladušič has a deep interest in computer science, which covers the fields from pure software development to the management of the technological projects. His past interests was efficiency of algorithms and artificial intelligence - most importantly, bridging the gap between traditional artificial intelligence and the machine learning. Part of his work in the field of the artificial intelligence was resulted in a PhD, which he received from the University of Ljubljana in 2005, with the thesis titled Use of qualitative models in quantitative prediction. After obtaining PhD, Daniel went to mix the the machine learning field know-how with the traditional GRID computing, within his post doctoral education, developing an add-on method to assist with the job scheduling problem. His work diversified into obtaining commercial projects from various fields, managing them and delivering the product. Given his scientific interests, he worked on lot of research projects, ranging from the FP6, FP7 and now, H2020 programmes. His work included either leadership functions or technology insight from the wealth of past experience. He is currently the coordinator of the H2020 MIKELANGELO project.)*
