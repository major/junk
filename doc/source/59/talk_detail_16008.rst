Using RUP, XP and Kanban Programming For OpenStack Development
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

**Abstract:**

The OpenStack Development process is fairly well documented and requirements for specific interactions with Git, Jenkins, Garrit and Zuul are somewhat straightforward. However, when it comes to the specifics on the developer's side, you're largely on your own. This is especially problematic in a world where development is moving from more traditional IT infrastructures to a more cloud-native architecture, so processes are already in flux. This talk will provide a guide to some of the more proven methods and practices that can be applied to achieve positive results, and how they apply to development in OpenStack.


* **Bruce Basil Mathews** *(Bruce has been a Senior Solutions Architect in the computer industry for almost forty years, working at Information International, Inc., Symbolics, Inc. Prime Computers, Inc., Computervision, Sun Microsystems, Hewlett-Packard, and now Mirantis. During his career, Bruce has provided integration services, application development, and large scale deployments for major corporate initiatives at companies such as PayPal, Salesforce.com, Wells Fargo, McKessen, Intel, and Dreamworks, Technicolor, American Express, CitrixOnLine, and Amgen to name a few. Bruce became involved with OpenStack in 2010 as a member of Hewlett-Packard’s Public Cloud team where he successfully on-boarded more than fifty customers, migrating application services from in-house to OpenStack on versions from Diablo+ to Grizzly, living with them through the upgrade process. Bruce was also heavily involved with the initial release of HP’s Helion Openstack based on the Juno release. Bruce has maintained an active role in the OpenStack, Big Data and Open Source communities. He is certified as an Administrator for OpenStack, Cloudera, and MapR.Customer engagements have typically included technical design, build, implementation, customization, integration and ongoing administration of multi-vendor servers, storage, SAN and network elements, hosted on-premises, implemented as a managed service, and/or publically hosted in the cloud.  Successful implementations have generally included multi-vendor Operating Systems (Solaris, HP-UX, AIX, Irix, RedHat, Ubuntu, CentOS, Debian, Fedora, Windows and Mac,) multi-vendor databases (Microsoft SQL Server, Oracle, MySQL, DB2, Sybase, Informix, PostGres, GreenPlum, Vertica, Cache, etc.) and NoSQL offerings such as CouchBase, CouchDB, Cassandra, MongoDB, etc. Applications implemented and supported have included a wide variety of multi-vendor commercial and non-commercial applications such as Microsoft ERP, Data Warehousing and Business Analytics, SAP, Oracle Manufacturing and Financials, PeopleSoft, etc. and Big Data solutions such as Cloudera, MapR, HortonWorks, and the eco-system that supports them based on Six Sigma methodologies. )*
